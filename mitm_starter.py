# mitm_starter.py ‚Äî –≤–µ—Ä—Å–∏—è –¥–ª—è HTTP upstream —Å –≤–∏–¥–∏–º–æ–π –∫–æ–Ω—Å–æ–ª—å—é mitmdump (Windows)
import subprocess
import sys
from urllib.parse import urlparse, unquote
import os

def get_path(filename):
    """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É, –∫–æ—Ç–æ—Ä—ã–π –ª–µ–∂–∏—Ç —Ä—è–¥–æ–º —Å exe."""
    if getattr(sys, 'frozen', False):
        # –ï—Å–ª–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω–∞ (–∑–∞–ø—É—â–µ–Ω–∞ –∫–∞–∫ .exe)
        application_path = os.path.dirname(sys.executable)
    else:
        # –ï—Å–ª–∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∫–∞–∫ –æ–±—ã—á–Ω—ã–π .py —Å–∫—Ä–∏–ø—Ç
        application_path = os.path.dirname(__file__)
    return os.path.join(application_path, filename)

def StartMitm(port: int = 8080, upstream_proxy: str = None):
    """
    –§–æ—Ä–º–∏—Ä—É–µ—Ç –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç mitmdump:
    - –µ—Å–ª–∏ upstream_proxy —Å–æ–¥–µ—Ä–∂–∏—Ç http(s)://user:pass@host:port -> –≤—ã–Ω–µ—Å–µ—Ç user:pass –≤ --upstream-auth
    - –æ—Ç–∫—Ä–æ–µ—Ç mitmdump –≤ –Ω–æ–≤–æ–π –∫–æ–Ω—Å–æ–ª–∏ –Ω–∞ Windows (CREATE_NEW_CONSOLE), —á—Ç–æ–±—ã –≤—ã –≤–∏–¥–µ–ª–∏ –≤—ã–≤–æ–¥
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç Popen –∏–ª–∏ None.
    """

    command = [
        "mitmdump",
        "-s", "traffic_catcher.py",
        "--listen-port", str(port),
        "--ssl-insecure"
    ]

    if upstream_proxy:
        parsed = urlparse(upstream_proxy)
        scheme = (parsed.scheme or "http").lower()

        # –ü—Ä–∏–º–µ–º —Ç–æ–ª—å–∫–æ http/https –¥–ª—è —ç—Ç–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞
        if scheme not in ("http", "https"):
            print(f"‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–æ–ª—å–∫–æ http/https –≤ —ç—Ç–æ–º —Ä–µ–∂–∏–º–µ. –ü–æ–ª—É—á–µ–Ω–∞ —Å—Ö–µ–º–∞: {scheme}")
            # –ø–æ–ø—Ä–æ–±—É–µ–º –ø–µ—Ä–µ–¥–∞—Ç—å –∫–∞–∫ –µ—Å—Ç—å (–Ω–æ mitmdump –º–æ–∂–µ—Ç —Ä—É–≥–Ω—É—Ç—å—Å—è)
            command.extend(["--mode", f"upstream:{upstream_proxy}"])
        else:
            # –°–æ–±–∏—Ä–∞–µ–º –∞–¥—Ä–µ—Å –±–µ–∑ userinfo
            host = parsed.hostname
            port_parsed = parsed.port
            if host is None:
                # –µ—Å–ª–∏ –ø–∞—Ä—Å–∏–Ω–≥ –ø—Ä–æ–≤–∞–ª–∏–ª—Å—è ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞–∫ –µ—Å—Ç—å
                address = upstream_proxy
            else:
                address = f"{scheme}://{host}"
                if port_parsed:
                    address += f":{port_parsed}"

            # –ï—Å–ª–∏ –µ—Å—Ç—å credentials ‚Äî –≤—ã–Ω–µ—Å—Ç–∏ –∏—Ö –≤ --upstream-auth
            if parsed.username or parsed.password:
                username = unquote(parsed.username or "")
                password = unquote(parsed.password or "")
                auth = f"{username}:{password}"
                command.extend(["--mode", f"upstream:{address}"])
                command.extend(["--upstream-auth", auth])
                print(f"üöÄ Mitmdump –∑–∞–ø—É—â–µ–Ω —Å upstream-–ø—Ä–æ–∫—Å–∏: {address} (credentials -> --upstream-auth)")
            else:
                command.extend(["--mode", f"upstream:{address}"])
                print(f"üöÄ Mitmdump –∑–∞–ø—É—â–µ–Ω –≤ —Ä–µ–∂–∏–º–µ upstream-–ø—Ä–æ–∫—Å–∏, –Ω–∞–ø—Ä–∞–≤–ª—è—è —Ç—Ä–∞—Ñ–∏–∫ –Ω–∞ {address}")
    else:
        print("‚ÑπÔ∏è Upstream-–ø—Ä–æ–∫—Å–∏ –Ω–µ –∑–∞–¥–∞–Ω ‚Äî –∑–∞–ø—É—Å–∫–∞—é mitmdump –±–µ–∑ upstream.")

    # –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–º–∞–Ω–¥—É –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
    print("üîß –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–∞:\n  " + " ".join(command))

    # –ù–∞ Windows ‚Äî –æ—Ç–∫—Ä—ã–≤–∞–µ–º –Ω–æ–≤—É—é –∫–æ–Ω—Å–æ–ª—å, —á—Ç–æ–±—ã mitmdump –±—ã–ª –≤–∏–¥–µ–Ω –æ—Ç–¥–µ–ª—å–Ω—ã–º –æ–∫–Ω–æ–º
    creation_flags = 0
    if sys.platform.startswith("win"):
        creation_flags = getattr(subprocess, "CREATE_NEW_CONSOLE", 0)

    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å. –ù–∞ Windows –æ–Ω –æ—Ç–∫—Ä–æ–µ—Ç –Ω–æ–≤–æ–µ –æ–∫–Ω–æ.
        proc = subprocess.Popen(command, creationflags=creation_flags)
        return proc
    except FileNotFoundError:
        print("‚ùå –û—à–∏–±–∫–∞: –∫–æ–º–∞–Ω–¥–∞ 'mitmdump' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ mitmproxy —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ mitmdump –≤ PATH.")
        return None
    except Exception as e:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å mitmdump: {e}")
        return None
